name: Test

on:
  pull_request: {}

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry install
    - name: Lint
      if: matrix.os != 'windows-latest'
      run: |
        ./scripts/lint.sh
    - name: Unit Test
      if: matrix.os != 'windows-latest'
      run: |
        poetry run ./scripts/test.sh
    - name: Unit Test windows
      if: matrix.os == 'windows-latest'
      run: |
        ./scripts/poetry_test.bat
    # - name: Upload coverage to Codecov
    #   if: matrix.os == 'ubuntu-latest'
    #   uses: codecov/codecov-action@v3
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}
    #     file: ./coverage.xml
    #     flags: unittests
#        fail_ci_if_error: true
    - name: Store coverage files
      uses: actions/upload-artifact@v4
      with:
        name: .coverage.${{ matrix.os }}-py${{ matrix.python-version }}
        path: coverage
        if-no-files-found: error


  coverage-combine:
    if: github.event.pull_request.draft == false
    needs:
      - test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: pyproject.toml

      - name: Get coverage files
        uses: actions/download-artifact@v4
        with:
          pattern: .coverage*
          path: coverage
          merge-multiple: true

      - run: pip install coverage[toml]

      - run: ls -la coverage
      - run: coverage combine coverage
      - run: coverage report
      - run: coverage html --show-contexts --title "FastAgency coverage for ${{ github.sha }}"

      - name: Store coverage html
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov
